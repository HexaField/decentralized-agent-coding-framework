version: "3.8"
services:
  orchestrator:
    image: mvp-orchestrator:${IMAGE_TAG:-latest}
    build:
      context: ..
      dockerfile: docker/orchestrator.Dockerfile
    container_name: mvp-orchestrator
    environment:
      ORCHESTRATOR_TOKEN: ${ORCHESTRATOR_TOKEN}
      DASHBOARD_TOKEN: ${DASHBOARD_TOKEN}
      ORCHESTRATOR_CONFIG: /app/configs/orchestrator.example.yaml
      WORKSPACE_DIR: /workspace
    volumes:
      - ../orchestrator/configs:/app/configs:ro
      - ${GUILDNET_STATE_DIR:-${HOME:-~}/.guildnet/state}:/state
      - ../:/workspace:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "18080:8080"
    networks:
      - mvp

  dashboard:
    image: node:20-alpine
    working_dir: /app
    user: root
    command:
      [
        "sh",
        "-lc",
        "apk add --no-cache docker-cli kubectl && npm ci && npx tsx server/server.ts",
      ]
    environment:
      DASHBOARD_TOKEN: ${DASHBOARD_TOKEN}
      ORCHESTRATOR_URL: http://mvp-orchestrator:8080
      ORCHESTRATOR_TOKEN: ${ORCHESTRATOR_TOKEN}
      UI_DEV: "0"
      DASHBOARD_STATE_DIR: /state
    volumes:
      - ../dashboard:/app
      - dashboard_node_modules:/app/node_modules
      # Mount the full repository so server can access /src/k8s manifests during deploy
      - ../:/src:ro
      - ${GUILDNET_STATE_DIR:-${HOME:-~}/.guildnet/state}:/state
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8443:8090"
    networks:
      - mvp

networks:
  mvp:
    driver: bridge

volumes:
  dashboard_node_modules:
