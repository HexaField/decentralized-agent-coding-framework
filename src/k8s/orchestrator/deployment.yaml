apiVersion: v1
kind: Namespace
metadata:
  name: mvp-agents
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: orchestrator
  namespace: mvp-agents
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: orchestrator
  namespace: mvp-agents
rules:
  - apiGroups: [""]
    resources: ["secrets", "configmaps", "services", "pods"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: ["guildnet.hexa.dev"]
    resources: ["agenttasks", "agenttasks/status"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: orchestrator
  namespace: mvp-agents
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: orchestrator
subjects:
  - kind: ServiceAccount
    name: orchestrator
    namespace: mvp-agents
---
apiVersion: v1
kind: Secret
metadata:
  name: orchestrator-secrets
  namespace: mvp-agents
stringData:
  ORCHESTRATOR_TOKEN: orchestrator-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator
  namespace: mvp-agents
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orchestrator
  template:
    metadata:
      labels:
        app: orchestrator
    spec:
      serviceAccountName: orchestrator
      containers:
        - name: orchestrator
          image: mvp-orchestrator:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: ORCHESTRATOR_MODE
              value: "single"
            - name: IN_CLUSTER
              value: "1"
            - name: AGENTS_NAMESPACE
              value: mvp-agents
            - name: ORCHESTRATOR_TOKEN
              valueFrom:
                secretKeyRef:
                  name: orchestrator-secrets
                  key: ORCHESTRATOR_TOKEN
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator
  namespace: mvp-agents
spec:
  selector:
    app: orchestrator
  ports:
    - name: http
      port: 8080
      targetPort: http
