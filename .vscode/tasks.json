{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Clean: wipe local state (safe)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"chmod +x src/scripts/cleanup_all.sh && src/scripts/cleanup_all.sh"
			],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			}
		},
		{
			"label": "Clean: wipe local state (dev)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"GUILDNET_ENV=dev chmod +x src/scripts/cleanup_all.sh && GUILDNET_ENV=dev src/scripts/cleanup_all.sh"
			],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			}
		},
		{
			"label": "CI: Build/test orchestrator and dashboard",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cd /Users/josh/Desktop/decentralized-agent-coding-framework/src/orchestrator/app && go build ./... && go test ./... && cd ../../dashboard && npm -s ci >/dev/null 2>&1 || npm -s install && npm -s test --silent"
			],
			"group": "build"
		},
		{
			"label": "Build and test orchestrator (CRD-only)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cd /Users/josh/Desktop/decentralized-agent-coding-framework/src/orchestrator/app && go build ./... && go test ./..."
			],
			"group": "build"
		},
		{
			"label": "Run dashboard tests (npm test) - final check",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cd /Users/josh/Desktop/decentralized-agent-coding-framework/src/dashboard && npm -s test --silent"
			],
			"group": "test"
		},
		{
			"label": "Build and test orchestrator (CRD-only)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cd /Users/josh/Desktop/decentralized-agent-coding-framework/src/orchestrator/app && go build ./... && go test ./..."
			],
			"group": "build"
		},
		{
			"label": "Re-run orchestrator and dashboard tests (with isolated HOME)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cd /Users/josh/Desktop/decentralized-agent-coding-framework/src/orchestrator/app && go test ./... && cd ../../dashboard && npm -s test --silent"
			],
			"group": "test"
		},
		{
			"label": "Framework: rebuild + up (compose)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"bash src/scripts/start_orchestrator.sh rebuild && bash src/scripts/start_orchestrator.sh up"
			],
			"group": "build",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			}
		},
		{
			"label": "Framework: up (compose)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"bash src/scripts/start_orchestrator.sh up"
			],
			"group": "build",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			}
		},
		{
			"label": "Framework: wait for health",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"set -e; echo 'Waiting for dashboard(:8443) and orchestrator(:18080)...'; for i in {1..90}; do curl -skf https://127.0.0.1:8443/api/health >/dev/null 2>&1 && curl -sf http://127.0.0.1:18080/health >/dev/null 2>&1 && echo 'Services healthy' && exit 0; sleep 2; done; echo 'Services not healthy in time'; exit 1"
			],
			"group": "test",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			}
		},
		{
			"label": "Test: dashboard bootstrap proxy (with stack)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cd src/dashboard && npm -s test --silent -- server/bootstrap.proxy.test.ts"
			],
			"group": "test",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			}
		},
		{
			"label": "Full framework: run dashboard proxy test",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Framework: up (compose)",
				"Framework: wait for health",
				"Test: dashboard bootstrap proxy (with stack)"
			],
			"group": "test"
		},
		{
			"label": "Run dashboard tests (npm test) - quick",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cd src/dashboard && npm -s test --silent"
			],
			"group": "test"
		}
	]
}